import { __decorate, __metadata, __param } from "tslib";
import { Directive, EventEmitter, Host, Output } from '@angular/core';
import { WizardCompletionStep } from '../util/wizard-completion-step.interface';
/**
 * The `awEnableBackLinks` directive can be used to allow the user to leave a [[WizardCompletionStep]] after is has been entered.
 *
 * ### Syntax
 *
 * ```html
 * <aw-wizard-completion-step awEnableBackLinks (stepExit)="exit function">
 *     ...
 * </aw-wizard-completion-step>
 * ```
 *
 * ### Example
 *
 * ```html
 * <aw-wizard-completion-step stepTitle="Final step" awEnableBackLinks>
 *     ...
 * </aw-wizard-completion-step>
 * ```
 *
 * @author Marc Arndt
 */
import * as ɵngcc0 from '@angular/core';
let EnableBackLinksDirective = class EnableBackLinksDirective {
    /**
     * Constructor
     *
     * @param completionStep The wizard completion step, which should be exitable
     */
    constructor(completionStep) {
        this.completionStep = completionStep;
        /**
         * This EventEmitter is called when the step is exited.
         * The bound method can be used to do cleanup work.
         */
        this.stepExit = new EventEmitter();
    }
    /**
     * Initialization work
     */
    ngOnInit() {
        this.completionStep.canExit = true;
        this.completionStep.stepExit = this.stepExit;
    }
};
EnableBackLinksDirective.ɵfac = function EnableBackLinksDirective_Factory(t) { return new (t || EnableBackLinksDirective)(ɵngcc0.ɵɵdirectiveInject(WizardCompletionStep, 1)); };
EnableBackLinksDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: EnableBackLinksDirective, selectors: [["", "awEnableBackLinks", ""]], outputs: { stepExit: "stepExit" } });
EnableBackLinksDirective.ctorParameters = () => [
    { type: WizardCompletionStep, decorators: [{ type: Host }] }
];
__decorate([
    Output(),
    __metadata("design:type", Object)
], EnableBackLinksDirective.prototype, "stepExit", void 0);
EnableBackLinksDirective = __decorate([ __param(0, Host()),
    __metadata("design:paramtypes", [WizardCompletionStep])
], EnableBackLinksDirective);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EnableBackLinksDirective, [{
        type: Directive,
        args: [{
                selector: '[awEnableBackLinks]'
            }]
    }], function () { return [{ type: WizardCompletionStep, decorators: [{
                type: Host
            }] }]; }, { stepExit: [{
            type: Output
        }] }); })();
export { EnableBackLinksDirective };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5hYmxlLWJhY2stbGlua3MuZGlyZWN0aXZlLmpzIiwic291cmNlcyI6WyJuZzovYW5ndWxhci1hcmNod2l6YXJkL2xpYi9kaXJlY3RpdmVzL2VuYWJsZS1iYWNrLWxpbmtzLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxZQUFZLEVBQUUsSUFBSSxFQUFVLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUU1RSxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSwwQ0FBMEMsQ0FBQztBQUU5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFJSCxJQUFhLHdCQUF3QixHQUFyQyxNQUFhLHdCQUF3QjtBQUFHLElBUXRDO0FBQ0Y7QUFDRTtBQUNFO0FBRUosT0FESztBQUNMLElBQUUsWUFBNEIsY0FBb0M7QUFDbEUsUUFEOEIsbUJBQWMsR0FBZCxjQUFjLENBQXNCO0FBQUMsUUFaakU7QUFDRjtBQUNNO0FBRUEsV0FERDtBQUNMLFFBQ1MsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFtQixDQUFDO0FBQ3hELElBT0UsQ0FBQztBQUNILElBQ0U7QUFDRjtBQUNFLE9BQUc7QUFDTCxJQUFTLFFBQVE7QUFBSyxRQUNsQixJQUFJLENBQUMsY0FBYyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7QUFDdkMsUUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO0FBQ2pELElBQUUsQ0FBQztBQUNILENBQUM7OzRLQUFBO0FBQ0Q7QUFBa0QsWUFYSixvQkFBb0IsdUJBQW5ELElBQUk7QUFBTTtBQVB2QjtBQUFhLElBRFosTUFBTSxFQUFFO0FBQ1Y7QUFBc0MsMERBQWlCO0FBTjNDLHdCQUF3QixvQkFIcEMsU0FBUyxDQUFDLGZBR1AsQ0FhVyxXQUFBLElBQUksRUFBRSxDQUFBO0lBZm5CLFFBQVEsRUFBRSxxQkFBcUIsTUFDaEMsQ0FBQywxQ0FjcUIscUNBQXVCLG9CQUFvQjtBQUFHLEdBYnhELHdCQUF3QixDQXVCcEM7Ozs7Ozs7Ozs7b0JBQ0Q7QUFBQyxTQXhCWSx3QkFBd0I7QUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBFdmVudEVtaXR0ZXIsIEhvc3QsIE9uSW5pdCwgT3V0cHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TW92aW5nRGlyZWN0aW9ufSBmcm9tICcuLi91dGlsL21vdmluZy1kaXJlY3Rpb24uZW51bSc7XG5pbXBvcnQge1dpemFyZENvbXBsZXRpb25TdGVwfSBmcm9tICcuLi91dGlsL3dpemFyZC1jb21wbGV0aW9uLXN0ZXAuaW50ZXJmYWNlJztcblxuLyoqXG4gKiBUaGUgYGF3RW5hYmxlQmFja0xpbmtzYCBkaXJlY3RpdmUgY2FuIGJlIHVzZWQgdG8gYWxsb3cgdGhlIHVzZXIgdG8gbGVhdmUgYSBbW1dpemFyZENvbXBsZXRpb25TdGVwXV0gYWZ0ZXIgaXMgaGFzIGJlZW4gZW50ZXJlZC5cbiAqXG4gKiAjIyMgU3ludGF4XG4gKlxuICogYGBgaHRtbFxuICogPGF3LXdpemFyZC1jb21wbGV0aW9uLXN0ZXAgYXdFbmFibGVCYWNrTGlua3MgKHN0ZXBFeGl0KT1cImV4aXQgZnVuY3Rpb25cIj5cbiAqICAgICAuLi5cbiAqIDwvYXctd2l6YXJkLWNvbXBsZXRpb24tc3RlcD5cbiAqIGBgYFxuICpcbiAqICMjIyBFeGFtcGxlXG4gKlxuICogYGBgaHRtbFxuICogPGF3LXdpemFyZC1jb21wbGV0aW9uLXN0ZXAgc3RlcFRpdGxlPVwiRmluYWwgc3RlcFwiIGF3RW5hYmxlQmFja0xpbmtzPlxuICogICAgIC4uLlxuICogPC9hdy13aXphcmQtY29tcGxldGlvbi1zdGVwPlxuICogYGBgXG4gKlxuICogQGF1dGhvciBNYXJjIEFybmR0XG4gKi9cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1thd0VuYWJsZUJhY2tMaW5rc10nXG59KVxuZXhwb3J0IGNsYXNzIEVuYWJsZUJhY2tMaW5rc0RpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIC8qKlxuICAgKiBUaGlzIEV2ZW50RW1pdHRlciBpcyBjYWxsZWQgd2hlbiB0aGUgc3RlcCBpcyBleGl0ZWQuXG4gICAqIFRoZSBib3VuZCBtZXRob2QgY2FuIGJlIHVzZWQgdG8gZG8gY2xlYW51cCB3b3JrLlxuICAgKi9cbiAgQE91dHB1dCgpXG4gIHB1YmxpYyBzdGVwRXhpdCA9IG5ldyBFdmVudEVtaXR0ZXI8TW92aW5nRGlyZWN0aW9uPigpO1xuXG4gIC8qKlxuICAgKiBDb25zdHJ1Y3RvclxuICAgKlxuICAgKiBAcGFyYW0gY29tcGxldGlvblN0ZXAgVGhlIHdpemFyZCBjb21wbGV0aW9uIHN0ZXAsIHdoaWNoIHNob3VsZCBiZSBleGl0YWJsZVxuICAgKi9cbiAgY29uc3RydWN0b3IoQEhvc3QoKSBwcml2YXRlIGNvbXBsZXRpb25TdGVwOiBXaXphcmRDb21wbGV0aW9uU3RlcCkge1xuICB9XG5cbiAgLyoqXG4gICAqIEluaXRpYWxpemF0aW9uIHdvcmtcbiAgICovXG4gIHB1YmxpYyBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLmNvbXBsZXRpb25TdGVwLmNhbkV4aXQgPSB0cnVlO1xuICAgIHRoaXMuY29tcGxldGlvblN0ZXAuc3RlcEV4aXQgPSB0aGlzLnN0ZXBFeGl0O1xuICB9XG59XG4iXX0=