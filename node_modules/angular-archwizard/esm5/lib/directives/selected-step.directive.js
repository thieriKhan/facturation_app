import { __decorate, __metadata, __param } from "tslib";
import { Directive, Host } from '@angular/core';
import { WizardStep } from '../util/wizard-step.interface';
/**
 * The `awSelectedStep` directive can be used on a [[WizardStep]] to set it as selected after the wizard initialisation or a reset.
 *
 * ### Syntax
 *
 * ```html
 * <aw-wizard-step stepTitle="Step title" awSelectedStep>
 *     ...
 * </aw-wizard-step>
 * ```
 *
 * @author Marc Arndt
 */
import * as ɵngcc0 from '@angular/core';
var SelectedStepDirective = /** @class */ (function () {
    /**
     * Constructor
     *
     * @param wizardStep The wizard step, which should be selected by default
     */
    function SelectedStepDirective(wizardStep) {
        this.wizardStep = wizardStep;
    }
    /**
     * Initialization work
     */
    SelectedStepDirective.prototype.ngOnInit = function () {
        this.wizardStep.defaultSelected = true;
    };
    SelectedStepDirective.ctorParameters = function () { return [
        { type: WizardStep, decorators: [{ type: Host }] }
    ]; };
    SelectedStepDirective = __decorate([ __param(0, Host()),
        __metadata("design:paramtypes", [WizardStep])
    ], SelectedStepDirective);
SelectedStepDirective.ɵfac = function SelectedStepDirective_Factory(t) { return new (t || SelectedStepDirective)(ɵngcc0.ɵɵdirectiveInject(WizardStep, 1)); };
SelectedStepDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SelectedStepDirective, selectors: [["", "awSelectedStep", ""]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectedStepDirective, [{
        type: Directive,
        args: [{
                selector: '[awSelectedStep]'
            }]
    }], function () { return [{ type: WizardStep, decorators: [{
                type: Host
            }] }]; }, null); })();
    return SelectedStepDirective;
}());
export { SelectedStepDirective };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0ZWQtc3RlcC5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIm5nOi9hbmd1bGFyLWFyY2h3aXphcmQvbGliL2RpcmVjdGl2ZXMvc2VsZWN0ZWQtc3RlcC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsSUFBSSxFQUFTLE1BQU0sZUFBZSxDQUFDO0FBQ3RELE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSwrQkFBK0IsQ0FBQztBQUV6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUlIO0FBQ0UsSUFBQTtBQUNGO0FBQ0U7QUFDRTtBQUVKLE9BREs7QUFDTCxJQUFFLCtCQUE0QixVQUFzQjtBQUNwRCxRQUQ4QixlQUFVLEdBQVYsVUFBVSxDQUFZO0FBQUMsSUFDbkQsQ0FBQztBQUNILElBQ0U7QUFDRjtBQUNFLE9BQUc7QUFDTCxJQUFTLHdDQUFRLEdBQWY7QUFBYyxRQUNaLElBQUksQ0FBQyxVQUFVLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQztBQUMzQyxJQUFFLENBQUM7QUFDRjtBQUNnRSxnQkFWdkIsVUFBVSx1QkFBckMsSUFBSTtBQUFNO0FBQVUsSUFOdEIscUJBQXFCLHdCQUhqQyxTQUFTLENBQUMsbkJBR0gsQ0FNTyxXQUFBLElBQUksRUFBRSxDQUFBO1lBUm5CLFFBQVEsRUFBRSxrQkFBa0IsVUFDN0IsQ0FBQyxuREFPcUIseUNBQW1CLFVBQVU7QUFBRyxPQU4xQyxxQkFBcUIsQ0FlakM7Ozs7Ozs7Ozs7a0NBQ0Q7QUFBQyxJQURELDRCQUFDO0FBQ0EsQ0FEQSxBQWZELElBZUM7QUFDRCxTQWhCYSxxQkFBcUI7QUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBIb3N0LCBPbkluaXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtXaXphcmRTdGVwfSBmcm9tICcuLi91dGlsL3dpemFyZC1zdGVwLmludGVyZmFjZSc7XG5cbi8qKlxuICogVGhlIGBhd1NlbGVjdGVkU3RlcGAgZGlyZWN0aXZlIGNhbiBiZSB1c2VkIG9uIGEgW1tXaXphcmRTdGVwXV0gdG8gc2V0IGl0IGFzIHNlbGVjdGVkIGFmdGVyIHRoZSB3aXphcmQgaW5pdGlhbGlzYXRpb24gb3IgYSByZXNldC5cbiAqXG4gKiAjIyMgU3ludGF4XG4gKlxuICogYGBgaHRtbFxuICogPGF3LXdpemFyZC1zdGVwIHN0ZXBUaXRsZT1cIlN0ZXAgdGl0bGVcIiBhd1NlbGVjdGVkU3RlcD5cbiAqICAgICAuLi5cbiAqIDwvYXctd2l6YXJkLXN0ZXA+XG4gKiBgYGBcbiAqXG4gKiBAYXV0aG9yIE1hcmMgQXJuZHRcbiAqL1xuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2F3U2VsZWN0ZWRTdGVwXSdcbn0pXG5leHBvcnQgY2xhc3MgU2VsZWN0ZWRTdGVwRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0IHtcbiAgLyoqXG4gICAqIENvbnN0cnVjdG9yXG4gICAqXG4gICAqIEBwYXJhbSB3aXphcmRTdGVwIFRoZSB3aXphcmQgc3RlcCwgd2hpY2ggc2hvdWxkIGJlIHNlbGVjdGVkIGJ5IGRlZmF1bHRcbiAgICovXG4gIGNvbnN0cnVjdG9yKEBIb3N0KCkgcHJpdmF0ZSB3aXphcmRTdGVwOiBXaXphcmRTdGVwKSB7XG4gIH1cblxuICAvKipcbiAgICogSW5pdGlhbGl6YXRpb24gd29ya1xuICAgKi9cbiAgcHVibGljIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMud2l6YXJkU3RlcC5kZWZhdWx0U2VsZWN0ZWQgPSB0cnVlO1xuICB9XG59XG4iXX0=