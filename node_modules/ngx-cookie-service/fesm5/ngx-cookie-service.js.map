{"version":3,"file":"ngx-cookie-service.js","sources":["ng:/ngx-cookie-service/lib/cookie.service.ts","ng:/ngx-cookie-service/public-api.ts","ng:/ngx-cookie-service/ngx-cookie-service.ts"],"names":[],"mappings":"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","sourcesContent":["// This service is based on the `ng2-cookies` package which sadly is not a service and does\n// not use `DOCUMENT` injection and therefore doesn't work well with AoT production builds.\n// Package: https://github.com/BCJTI/ng2-cookies\n\nimport { Injectable, Inject, PLATFORM_ID, InjectionToken } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CookieService {\n  private readonly documentIsAccessible: boolean;\n\n  constructor(\n    // The type `Document` may not be used here. Although a fix is on its way,\n    // we will go with `any` for now to support Angular 2.4.x projects.\n    // Issue: https://github.com/angular/angular/issues/12631\n    // Fix: https://github.com/angular/angular/pull/14894\n    @Inject( DOCUMENT ) private document: any,\n    // Get the `PLATFORM_ID` so we can check if we're in a browser.\n    @Inject( PLATFORM_ID ) private platformId: InjectionToken<object>,\n  ) {\n    this.documentIsAccessible = isPlatformBrowser( this.platformId );\n  }\n\n  /**\n   * @param name Cookie name\n   * @returns boolean - whether cookie with specified name exists\n   */\n  check( name: string ): boolean {\n    if ( !this.documentIsAccessible ) {\n      return false;\n    }\n\n    name = encodeURIComponent( name );\n\n    const regExp: RegExp = this.getCookieRegExp( name );\n    const exists: boolean = regExp.test( this.document.cookie );\n\n    return exists;\n  }\n\n  /**\n   * @param name Cookie name\n   * @returns property value\n   */\n  get( name: string ): string {\n    if ( this.documentIsAccessible && this.check( name ) ) {\n      name = encodeURIComponent( name );\n\n      const regExp: RegExp = this.getCookieRegExp( name );\n      const result: RegExpExecArray = regExp.exec( this.document.cookie );\n\n      return this.safeDecodeURIComponent(result[1]);\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * @returns all the cookies in json\n   */\n  getAll(): {[key: string]: string} {\n    if ( !this.documentIsAccessible ) {\n      return {};\n    }\n\n    const cookies: {[key: string]: string}  = {};\n    const document: any = this.document;\n\n    if ( document.cookie && document.cookie !== '' ) {\n      document.cookie.split(';').forEach(currentCookie => {\n        const [cookieName, cookieValue] = currentCookie.split('=');\n        cookies[this.safeDecodeURIComponent(cookieName.replace(/^ /, ''))] = this.safeDecodeURIComponent(cookieValue);\n      });\n    }\n\n    return cookies;\n  }\n\n  /**\n   * @param name     Cookie name\n   * @param value    Cookie value\n   * @param expires  Number of days until the cookies expires or an actual `Date`\n   * @param path     Cookie path\n   * @param domain   Cookie domain\n   * @param secure   Secure flag\n   * @param sameSite OWASP samesite token `Lax`, `None`, or `Strict`. Defaults to `Lax`\n   */\n  set(\n    name: string,\n    value: string,\n    expires?: number | Date,\n    path?: string,\n    domain?: string,\n    secure?: boolean,\n    sameSite: 'Lax' | 'None' | 'Strict' = 'Lax'\n  ): void {\n    if ( !this.documentIsAccessible ) {\n      return;\n    }\n\n    let cookieString: string = encodeURIComponent( name ) + '=' + encodeURIComponent( value ) + ';';\n\n    if ( expires ) {\n      if ( typeof expires === 'number' ) {\n        const dateExpires: Date = new Date( new Date().getTime() + expires * 1000 * 60 * 60 * 24 );\n\n        cookieString += 'expires=' + dateExpires.toUTCString() + ';';\n      } else {\n        cookieString += 'expires=' + expires.toUTCString() + ';';\n      }\n    }\n\n    if ( path ) {\n      cookieString += 'path=' + path + ';';\n    }\n\n    if ( domain ) {\n      cookieString += 'domain=' + domain + ';';\n    }\n\n    if ( secure === false && sameSite === 'None') {\n      secure = true;\n      console.warn(`[ngx-cookie-service] Cookie ${name} was forced with secure flag because sameSite=None.` +\n        `More details : https://github.com/stevermeister/ngx-cookie-service/issues/86#issuecomment-597720130`);\n    }\n\n    if (secure) {\n      cookieString += 'secure;';\n    }\n\n    cookieString += 'sameSite=' + sameSite + ';';\n\n    this.document.cookie = cookieString;\n  }\n\n  /**\n   * @param name   Cookie name\n   * @param path   Cookie path\n   * @param domain Cookie domain\n   */\n  delete( name: string, path?: string, domain?: string, secure?: boolean, sameSite: 'Lax' | 'None' | 'Strict' = 'Lax' ): void {\n    if ( !this.documentIsAccessible ) {\n      return;\n    }\n\n    this.set( name, '', new Date('Thu, 01 Jan 1970 00:00:01 GMT'), path, domain, secure, sameSite );\n  }\n\n  /**\n   * @param path   Cookie path\n   * @param domain Cookie domain\n   */\n  deleteAll( path?: string, domain?: string, secure?: boolean, sameSite: 'Lax' | 'None' | 'Strict' = 'Lax' ): void {\n    if ( !this.documentIsAccessible ) {\n      return;\n    }\n\n    const cookies: any = this.getAll();\n\n    for ( const cookieName in cookies ) {\n      if ( cookies.hasOwnProperty( cookieName ) ) {\n        this.delete( cookieName, path, domain, secure, sameSite );\n      }\n    }\n  }\n\n  /**\n   * @param name Cookie name\n   * @returns property RegExp\n   */\n  private getCookieRegExp( name: string ): RegExp {\n    const escapedName: string = name.replace( /([\\[\\]\\{\\}\\(\\)\\|\\=\\;\\+\\?\\,\\.\\*\\^\\$])/ig, '\\\\$1' );\n\n    return new RegExp( '(?:^' + escapedName + '|;\\\\s*' + escapedName + ')=(.*?)(?:;|$)', 'g' );\n  }\n\n  private safeDecodeURIComponent(encodedURIComponent: string): string {\n    try {\n      return decodeURIComponent(encodedURIComponent);\n    } catch {\n      // probably it is not uri encoded. return as is\n      return encodedURIComponent;\n    }\n  }\n}\n","/*\n * Public API Surface of ngx-cookie-service\n */\n\nexport * from './lib/cookie.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}